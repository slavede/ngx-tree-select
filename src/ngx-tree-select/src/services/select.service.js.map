{"version":3,"sources":["../../../../../src/ngx-tree-select/src/services/select.service.ts"],"names":[],"mappings":"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","file":"select.service.js","sourceRoot":"","sourcesContent":["import { Subject } from 'rxjs/Rx';\nimport { SelectableItem } from '../models/selectable-item';\nimport { SelectOption } from '../models/select-option';\nimport { Injectable } from '@angular/core';\n\nexport type OptionDelegate = (options: SelectOption) => void;\n\n@Injectable()\nexport class SelectService {\n  public modelChanged$: Subject<any> = new Subject<any>();\n\n  private _items: SelectableItem[];\n  private _options: SelectOption = new SelectOption();\n\n  public close(): void {\n    if (this.Configuration.isOpen) {\n      this.setConfiguration((opt) => opt.isOpen = false, false);\n    }\n  }\n\n  public open(): void {\n    if (!this.Configuration.isOpen) {\n      this.setConfiguration((opt) => opt.isOpen = true, false);\n    }\n  }\n\n  public toggleOpen(): void {\n    this.setConfiguration((opt) => opt.isOpen = !opt.isOpen, false);\n  }\n\n  public setItems(value: any[]) {\n    this.setConfiguration((opt) => opt.items = value, true);\n  }\n\n  public getInternalItems(): SelectableItem[] {\n    return this._items;\n  }\n\n  public setSelection(values: any | any[]): void {\n    this.setConfiguration((opt) => opt.model = values, true);\n  }\n\n  public setSelectedItemOrChild(items: SelectableItem[], destination: string) {\n    for (const itm of items) {\n      if (itm.hasChild) {\n        if (itm.id === destination) {\n          itm.selected = true;\n        }\n        this.setSelectedItemOrChild(itm.children, destination);\n      } else if (itm.id === destination) {\n        itm.selected = true;\n      }\n    }\n  }\n\n  public getSelection(): any | any[] {\n    if (this.Configuration.allowMultiple) {\n      return this.getInternalSelection().map((v) => v.data);\n    } else {\n      const result = this.getInternalSelection();\n      if (result && result.length > 0) {\n        return result[0].data;\n      }\n    }\n\n    return null;\n  }\n\n  public getInternalSelection(): SelectableItem[] {\n    const selectedItems = this.getSelectedItems(this._items);\n    if (selectedItems && selectedItems.length > 0) {\n      let i = 0;\n      const max = this._options.maxVisibleItemCount ? this._options.maxVisibleItemCount : 0;\n\n      for (const item of selectedItems) {\n        item.isVisible =\n          // Max not reached or not max value\n          (i < max || max === 0) &&\n          // all my children are unselected\n          (!item.hasChild || item.children.every((child) => child.selected === false));\n        if (item.isVisible && max > 0) {\n          i++;\n        }\n      }\n    }\n    return selectedItems;\n  }\n\n  public toggleItemSelection(item: SelectableItem): void {\n    if (!this.Configuration.allowMultiple) {\n      this.setAllUnselected(this._items);\n    }\n    item.selected = !item.selected;\n    this.setConfiguration((opt) => opt.model = this.getSelection(), false);\n    if (this.Configuration.closeOnSelection) {\n      this.setConfiguration((opt) => opt.isOpen = false, false);\n    }\n  }\n\n  public setAllUnselected(items: SelectableItem[]) {\n    for (const itm of items) {\n      if (itm.hasChild) {\n        itm.selected = false;\n        this.setAllUnselected(itm.children);\n      } else {\n        itm.selected = false;\n      }\n    }\n  }\n\n  public setConfiguration(delegate: OptionDelegate, processItems: boolean): void {\n    const modelBck = this._options.model;\n    delegate(this._options);\n    if (this._options.isValid()) {\n      this.reconfigure(processItems);\n    }\n    // if model changed, raise event\n    if ((modelBck && this._options.model !== modelBck) || (!modelBck && this._options.model)) {\n      this.modelChanged$.next(this._options.model);\n    }\n  }\n\n  public get Configuration(): SelectOption {\n    return this._options;\n  }\n\n  private toSelectableItems(sources: any[]): SelectableItem[] {\n    if (sources && Array.isArray(sources)) {\n      let i = 1;\n      return sources.map((srcItem) => {\n        let item;\n        if (srcItem[this._options.idProperty] &&\n            srcItem[this._options.idProperty] !== '' &&\n            srcItem[this._options.textProperty]) {\n          item = new SelectableItem(\n            (srcItem[this._options.idProperty] || '').toString(),\n            srcItem[this._options.textProperty] as string,\n            srcItem,\n            this\n          );\n        } else {\n          item = new SelectableItem(\n            i.toString(),\n            srcItem as string,\n            srcItem,\n            this\n          );\n          i++;\n        }\n        if (this._options.isHierarchy()) {\n          item.children = this.toSelectableItems(srcItem[this._options.childProperty]);\n        }\n        return item;\n      });\n    }\n\n    return [];\n  }\n\n  private getSelectedItems(array: SelectableItem[]): SelectableItem[] {\n    if (this.Configuration.isValid()) {\n      let res: SelectableItem[] = [];\n      for (const v of array) {\n        if (v.hasChild && v.selected === true) {\n          if (v.children.every((child) => child.selected === false)) {\n            res = [...res, v];\n          } else {\n            res = [...res, ...this.getSelectedItems(v.children)];\n          }\n        } else if (v.hasChild) {\n          res = [...res, ...this.getSelectedItems(v.children)];\n        } else if (v.selected === true) {\n          res = [...res, v];\n        }\n      }\n      return res;\n    } else {\n      return [];\n    }\n  }\n\n  private reconfigure(processItems: boolean): void {\n    if (this.Configuration.isValid()) {\n      this.checkConfig();\n      if (processItems) {\n        this._items = this.toSelectableItems(this.Configuration.items);\n      }\n\n      const model = this.getModel();\n      let select: SelectableItem[] = [];\n      model.forEach((v) => {\n        select = [...select, ...this.getItemForModel(v, this._items)];\n      });\n      select.forEach((v) => v._selected = true);\n    }\n  }\n\n  private checkConfig() {\n    if (this.Configuration.allowMultiple && this.Configuration.closeOnSelection) {\n      this.Configuration.closeOnSelection = false;\n    } else if (!this.Configuration.allowMultiple && !this.Configuration.closeOnSelection) {\n      this.Configuration.closeOnSelection = true;\n    }\n  }\n  private getModel(): any[] {\n    if (!this.Configuration.model) {\n      return [];\n    } else if (!Array.isArray(this.Configuration.model)) {\n      return [this.Configuration.model];\n    } else {\n      return this.Configuration.model;\n    }\n  }\n\n  private getItemForModel(value: any, array: SelectableItem[]): SelectableItem[] {\n    let result: SelectableItem[] = [];\n    for (const v of array) {\n      if (value) {\n        if (typeof value !== 'object') {\n          if (v.data === value) {\n            result.push(v);\n          }\n        } else {\n          if (value[this.Configuration.idProperty]) {\n            if (v.id === (value[this.Configuration.idProperty] || '').toString()) {\n              result.push(v);\n            }\n          }\n          if (this.Configuration.isHierarchy() && v.children && v.children.length > 0) {\n            result = [...result, ...this.getItemForModel(value, v.children)];\n          }\n        }\n      }\n    }\n    return result;\n  }\n}\n"]}