{"version":3,"sources":["../../../../../src/ngx-tree-select/src/components/tree-select.component.ts"],"names":[],"mappings":"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","file":"tree-select.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  forwardRef,\n  HostListener,\n  Input,\n  OnInit\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ItemPipe } from '../pipes/item.pipe';\nimport { SelectableItem } from '../models/selectable-item';\nimport { SelectOption } from '../models/select-option';\nimport { SelectService } from '../services/select.service';\nimport { TreeSelectDefaultOptions } from '../models/tree-select-default-options';\n\n// tslint:disable-next-line:no-empty\nconst noop = () => {};\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line:no-forward-ref\n  useExisting: forwardRef(() => TreeSelectComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'tree-select',\n  templateUrl: './tree-select.component.html',\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR, SelectService],\n  styleUrls: ['./tree-select.component.scss']\n})\nexport class TreeSelectComponent implements ControlValueAccessor {\n  public onTouchedCallback: () => void = noop;\n  public showMoreLink = false;\n  public moreLoaded = false;\n  @Input() public disabled = false;\n  @Input() public placeholder = '';\n  @Input() public filterPlaceholder = 'Type here for filtering items...';\n  @Input() public allowFilter = true;\n  private _isOpen = false;\n  private onChangeCallback: (_: any) => void = noop;\n  private haveFocus = false;\n  private inputFocus = false;\n\n  @Input()\n  public set items(value: any[]) {\n    this.svc.setItems(value);\n  }\n\n  @Input()\n  public set idField(value: string) {\n    this.svc.setConfiguration((opt) => opt.idProperty = value, true);\n  }\n\n  @Input()\n  public set textField(value: string) {\n    this.svc.setConfiguration((opt) => opt.textProperty = value, true);\n  }\n\n  @Input()\n  public set allowParentSelection(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.allowParentSelection = value, true);\n  }\n  public get allowParentSelection(): boolean {\n    return this.svc.Configuration.allowParentSelection;\n  }\n\n  @Input()\n  public set childrenField(value: string) {\n    this.svc.setConfiguration((opt) => opt.childProperty = value, true);\n  }\n\n  @Input()\n  public set multiple(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.allowMultiple = value, true);\n  }\n  public get multiple(): boolean {\n    return this.svc.Configuration.allowMultiple;\n  }\n\n  @Input()\n  public set filterCaseSensitive(value: boolean) {\n    this.svc.setConfiguration((opt) => opt.filterCaseSensitive = value, true);\n  }\n  public get filterCaseSensitive(): boolean {\n    return this.svc.Configuration.filterCaseSensitive;\n  }\n\n  @Input()\n  public set maxVisibleItemCount(value: number) {\n    this.svc.setConfiguration((opt) => opt.maxVisibleItemCount = value, true);\n  }\n  public get maxVisibleItemCount(): number {\n    return this.svc.Configuration.maxVisibleItemCount;\n  }\n\n  public get internalItems(): SelectableItem[] {\n    return this.svc.getInternalItems() || [];\n  }\n\n  public get selection(): SelectableItem[] {\n    this.showMoreLink = (\n      this.maxVisibleItemCount > 0 &&\n      ((this.svc.getInternalSelection().length - this.maxVisibleItemCount) > 0)\n    );\n    return this.svc.getInternalSelection();\n  }\n\n  public get filter(): string {\n    return this.svc.Configuration.filter;\n  }\n\n  public set filter(value: string) {\n    this.svc.setConfiguration((opt) => opt.filter = value, false);\n    for (const item of this.internalItems) {\n      this.ProcessMatchFilterTreeItem(item, this.svc.Configuration.filter);\n    }\n  }\n\n  public constructor(\n    private svc: SelectService,\n    private defaultOpts: TreeSelectDefaultOptions\n  ) {\n    this.clickedOutside = this.clickedOutside.bind(this);\n\n    this.svc.modelChanged$.subscribe((result) => {\n      this.onChangeCallback(result);\n    });\n    this.maxVisibleItemCount = (defaultOpts.maxVisibleItemCount || 0);\n    this.allowParentSelection = (\n      (defaultOpts.allowParentSelection === undefined ||\n       defaultOpts.allowParentSelection === null) ?\n        true :\n        defaultOpts.allowParentSelection\n    );\n    this.allowFilter = (\n      (defaultOpts.allowFilter === undefined || defaultOpts.allowFilter === null) ?\n        true :\n        defaultOpts.allowFilter\n    );\n    this.filterCaseSensitive = (\n      (defaultOpts.filterCaseSensitive === undefined || defaultOpts.filterCaseSensitive === null) ?\n        false :\n        defaultOpts.filterCaseSensitive\n    );\n    this.filterPlaceholder = (defaultOpts.filterPlaceholder || 'Type here for filtering items...');\n    this.idField = (defaultOpts.idField || 'id');\n    this.textField = (defaultOpts.textField || 'id');\n    this.childrenField = (defaultOpts.childrenField || '');\n  }\n\n  // tslint:disable-next-line:no-empty\n  public keyUp($event: any) {}\n\n  public toggle($event: any) {\n    $event.preventDefault();\n    this.haveFocus = true;\n    this.svc.toggleOpen();\n  }\n\n  public removeItem($event: any, item: SelectableItem): void {\n    $event.stopPropagation();\n    this.svc.toggleItemSelection(item);\n  }\n\n  public get isOpen(): boolean {\n    return this.svc.Configuration.isOpen;\n  }\n\n  public clickedOutside() {\n    if (!this.inputFocus) {\n      if (!this.haveFocus && this.isOpen || this.haveFocus && !this.isOpen) {\n        this.onTouched();\n      }\n      this.haveFocus = false;\n    }\n  }\n\n  // Set touched on blur\n  @HostListener('blur')\n  public onTouched() {\n    this.svc.close();\n    this.onTouchedCallback();\n  }\n\n  public setInputFocus() {\n    this.inputFocus = true;\n  }\n  public setInputFocusOut() {\n    this.inputFocus = false;\n  }\n\n  /**\n   * Write a new value to the element.\n   *\n   * @param {*} value\n   * @memberof TreeSelectComponent\n   */\n  public writeValue(value: any): void {\n    this.svc.setSelection(value);\n  }\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   *\n   * @param {*} fn\n   * @memberof TreeSelectComponent\n   */\n  public registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   *\n   * @param {*} fn\n   * @memberof TreeSelectComponent\n   */\n  public registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  /**\n   * This function is called when the control status changes to or from \"DISABLED\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param {boolean} isDisabled\n   * @memberof TreeSelectComponent\n   */\n  public setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * This finction is called when user click on show more link.\n   *\n   * @param {*} $event\n   * @memberof TreeSelectComponent\n   */\n  public loadMore($event: any) {\n    $event.stopPropagation();\n    this.moreLoaded = !this.moreLoaded;\n  }\n\n  private ProcessMatchFilterTreeItem(tree: SelectableItem, filter: string): boolean {\n    let result = false;\n    if (tree && tree.children && tree.children.length > 0) {\n      for (const child of tree.children) {\n        result = this.ProcessMatchFilterTreeItem(child, filter) || result;\n      }\n    }\n    tree.matchFilter = this.filterCaseSensitive ?\n                      (\n                        tree.id.indexOf(filter) > -1 ||\n                        tree.text.indexOf(filter) > -1 ||\n                        result) :\n                      (\n                        tree.id.toLowerCase().indexOf(filter.toLowerCase()) > -1 ||\n                        tree.text.toLowerCase().indexOf(filter.toLowerCase()) > -1 ||\n                        result\n                      );\n\n    return tree.matchFilter;\n  }\n}\n"]}