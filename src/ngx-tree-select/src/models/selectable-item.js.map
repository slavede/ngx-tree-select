{"version":3,"sources":["../../../../../src/ngx-tree-select/src/models/selectable-item.ts"],"names":[],"mappings":"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","file":"selectable-item.js","sourceRoot":"","sourcesContent":["import { SelectService } from '../services/select.service';\n\nexport class SelectableItem {\n  public _selected = false;\n  public children?: SelectableItem[];\n  public isOpen = false;\n  public matchFilter = true;\n  public isVisible = false;\n\n  constructor(public id: string, public text: string, public data: any, public svc: SelectService) {\n  }\n\n  get hasChild(): boolean {\n    return this.children && this.children.length > 0;\n  }\n  get checked(): boolean {\n    if (this.hasChild && this.svc.Configuration.allowMultiple) {\n      if (this.children.every((child) => child.selected)) {\n        return true;\n      } else if (this.children.every((child) => child.selected === false)) {\n        return this._selected;\n      }\n      return null;\n    }\n    return this._selected;\n  }\n  get selected(): boolean {\n    if (this.hasChild && this.svc.Configuration.allowMultiple) {\n      if (this.children.some((child) => child.selected)) {\n        if (this.svc.Configuration.allowParentSelection) {\n          this._selected = false;\n        }\n        return true;\n      } else if (this.children.every((child) => child.selected === false)) {\n        if (this.svc.Configuration.allowParentSelection) {\n          return this._selected;\n        } else {\n          return this._selected = false;\n        }\n      }\n      return false;\n    } else if (this.hasChild && this._selected === true) {\n      for (const itm of this.children) {\n        itm.selected = false;\n      }\n    }\n\n    return this._selected;\n  }\n  set selected(value: boolean) {\n    if (this.hasChild && !this.svc.Configuration.allowParentSelection) {\n      if (value !== null) {\n        this.children.forEach((child) => child.selected = value);\n      }\n    } else {\n      this._selected = value;\n    }\n  }\n}\n"]}